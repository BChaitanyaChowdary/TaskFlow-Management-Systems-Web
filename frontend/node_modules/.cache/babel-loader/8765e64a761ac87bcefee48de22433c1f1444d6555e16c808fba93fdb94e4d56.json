{"ast":null,"code":"import _objectSpread from\"C:/Users/B Chaitanya Chowdary/Desktop/Task/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useMutation,useQuery}from'react-query';import{useAuth}from'../../contexts/AuthContext';import{tasksAPI,projectsAPI,authAPI}from'../../services/api';import Button from'../UI/Button';import Input from'../UI/Input';import Select from'../UI/Select';import Textarea from'../UI/Textarea';import{X}from'lucide-react';import toast from'react-hot-toast';import ConfirmPasswordModal from'../UI/ConfirmPasswordModal';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TaskModal=_ref=>{var _projects$data,_employees$data;let{task,onClose,onSuccess}=_ref;const{user}=useAuth();const[formData,setFormData]=useState({title:'',description:'',project:'',assignee:'',assignee_ids:[],priority:'medium',status:'todo',due_date:''});const[multiAssign,setMultiAssign]=useState(false);const[errors,setErrors]=useState({});const[showConfirm,setShowConfirm]=useState(false);const[confirmError,setConfirmError]=useState('');const[confirmLoading,setConfirmLoading]=useState(false);const[pendingData,setPendingData]=useState(null);// Fetch projects and employees\nconst{data:projects}=useQuery('projects',projectsAPI.getProjects);const{data:employees,isLoading:employeesLoading,error:employeesError}=useQuery('employees',()=>authAPI.getEmployees().then(res=>res.data||res),{enabled:(user===null||user===void 0?void 0:user.role)==='scrum_master',onSuccess:data=>{console.log('Employees data:',data);console.log('Is array:',Array.isArray(data));},onError:error=>{console.error('Error fetching employees:',error);}});// Create/Update task mutation\nconst taskMutation=useMutation(data=>task?tasksAPI.updateTask(task.id,data):tasksAPI.createTask(data),{onSuccess:()=>{toast.success(task?'Task updated successfully':'Task created successfully');onSuccess();},onError:error=>{var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||'Operation failed';toast.error(message);}});useEffect(()=>{if(task){setFormData({title:task.title||'',description:task.description||'',project:task.project||'',assignee:task.assignee||'',assignee_ids:task.assignees?task.assignees.map(a=>a.user):[],priority:task.priority||'medium',status:task.status||'todo',due_date:task.due_date?new Date(task.due_date).toISOString().split('T')[0]:''});}},[task]);const handleChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));// Clear error when user starts typing\nif(errors[name]){setErrors(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:''}));}};const validateForm=()=>{const newErrors={};if(!formData.title.trim()){newErrors.title='Title is required';}if(!formData.project){newErrors.project='Project is required';}if((user===null||user===void 0?void 0:user.role)==='scrum_master'){if(!multiAssign){if(!formData.assignee)newErrors.assignee='Select one employee';}else{if(!Array.isArray(formData.assignee_ids)||formData.assignee_ids.length===0){newErrors.assignee_ids='Select at least one employee';}}}setErrors(newErrors);return Object.keys(newErrors).length===0;};const handleSubmit=e=>{e.preventDefault();if(!validateForm())return;const submitData={title:formData.title,description:formData.description,project:formData.project?parseInt(formData.project,10):null,assignee:!multiAssign&&formData.assignee?parseInt(formData.assignee,10):null,assignee_ids:multiAssign?formData.assignee_ids:formData.assignee?[parseInt(formData.assignee,10)]:[],priority:formData.priority,status:formData.status,due_date:formData.due_date||null};if(task){setPendingData(submitData);setConfirmError('');setShowConfirm(true);return;}taskMutation.mutate(submitData);};const confirmEdit=async password=>{if(!pendingData)return;setConfirmLoading(true);setConfirmError('');try{await authAPI.login(user===null||user===void 0?void 0:user.email,password);taskMutation.mutate(pendingData,{onSettled:()=>{setConfirmLoading(false);setShowConfirm(false);setPendingData(null);}});}catch(e){setConfirmLoading(false);setConfirmError('Incorrect password. Please try again.');}};const priorityOptions=[{value:'low',label:'Low'},{value:'medium',label:'Medium'},{value:'high',label:'High'},{value:'critical',label:'Critical'}];const statusOptions=[{value:'todo',label:'To Do'},{value:'in_progress',label:'In Progress'},{value:'done',label:'Done'}];const projectArray=Array.isArray(projects)?projects:Array.isArray(projects===null||projects===void 0?void 0:projects.data)?projects.data:(projects===null||projects===void 0?void 0:(_projects$data=projects.data)===null||_projects$data===void 0?void 0:_projects$data.results)||[];const projectOptions=projectArray.map(project=>({value:project.id,label:project.name}));const employeesArray=Array.isArray(employees)?employees:Array.isArray(employees===null||employees===void 0?void 0:employees.results)?employees.results:Array.isArray(employees===null||employees===void 0?void 0:employees.data)?employees.data:(employees===null||employees===void 0?void 0:(_employees$data=employees.data)===null||_employees$data===void 0?void 0:_employees$data.results)||[];const assigneeOptions=employeesArray.map(emp=>({value:emp.id,label:emp.get_full_name||emp.username}));return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 z-50 overflow-y-auto\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\",onClick:onClose}),/*#__PURE__*/_jsx(\"div\",{className:\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:task?'Edit Task':'Create New Task'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onClose,className:\"text-gray-400 hover:text-gray-600\",children:/*#__PURE__*/_jsx(X,{className:\"h-6 w-6\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(Input,{label:\"Title\",name:\"title\",value:formData.title,onChange:handleChange,error:errors.title,required:true,placeholder:\"Enter task title\"}),/*#__PURE__*/_jsx(Textarea,{label:\"Description\",name:\"description\",value:formData.description,onChange:handleChange,placeholder:\"Enter task description\",rows:3}),/*#__PURE__*/_jsx(Select,{label:\"Project\",name:\"project\",value:formData.project,onChange:handleChange,options:projectOptions,error:errors.project,required:true,placeholder:\"Select project\"}),(user===null||user===void 0?void 0:user.role)==='scrum_master'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Assign to Employees\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center gap-2 text-sm text-gray-600\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:multiAssign,onChange:e=>setMultiAssign(e.target.checked),className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"}),\"Assign to multiple\"]})]}),employeesLoading?/*#__PURE__*/_jsx(\"div\",{className:\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"Loading employees...\"})}):employeesError?/*#__PURE__*/_jsx(\"div\",{className:\"w-full px-3 py-2 border border-red-300 rounded-md bg-red-50\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-red-500\",children:\"Error loading employees\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[!multiAssign?/*#__PURE__*/_jsx(Select,{name:\"assignee\",value:formData.assignee,onChange:handleChange,options:assigneeOptions,placeholder:\"Select an employee\",error:errors.assignee}):/*#__PURE__*/_jsx(\"div\",{className:\"max-h-40 overflow-y-auto border border-gray-300 rounded-md p-2\",children:Array.isArray(employeesArray)&&employeesArray.length>0?employeesArray.map(employee=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-3 p-2 hover:bg-gray-50 rounded cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:formData.assignee_ids.includes(employee.id),onChange:e=>{if(e.target.checked){setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{assignee_ids:[...prev.assignee_ids,employee.id]}));}else{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{assignee_ids:prev.assignee_ids.filter(id=>id!==employee.id)}));}},className:\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm font-medium text-gray-900\",children:[employee.first_name,\" \",employee.last_name]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:employee.email})]})]},employee.id)):/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 p-2\",children:\"No employees available\"})}),formData.assignee_ids.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:formData.assignee_ids.map(assigneeId=>{const employee=employeesArray.find(emp=>emp.id===assigneeId);return employee?/*#__PURE__*/_jsxs(\"span\",{className:\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\",children:[employee.first_name,\" \",employee.last_name,/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{assignee_ids:prev.assignee_ids.filter(id=>id!==assigneeId)}));},className:\"ml-1.5 inline-flex items-center justify-center w-4 h-4 rounded-full text-blue-400 hover:bg-blue-200 hover:text-blue-500\",children:/*#__PURE__*/_jsx(X,{className:\"w-3 h-3\"})})]},assigneeId):null;})})]}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-gray-500\",children:\"Choose a single assignee or enable multi-assign to select multiple employees.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsx(Select,{label:\"Priority\",name:\"priority\",value:formData.priority,onChange:handleChange,options:priorityOptions}),/*#__PURE__*/_jsx(Select,{label:\"Status\",name:\"status\",value:formData.status,onChange:handleChange,options:statusOptions})]}),/*#__PURE__*/_jsx(Input,{label:\"Due Date\",name:\"due_date\",type:\"date\",value:formData.due_date,onChange:handleChange})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\",children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",loading:taskMutation.isLoading,disabled:taskMutation.isLoading,className:\"w-full sm:w-auto sm:ml-3\",children:task?'Update Task':'Create Task'}),/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"outline\",onClick:onClose,className:\"mt-3 w-full sm:mt-0 sm:w-auto\",children:\"Cancel\"})]})]})})]})}),/*#__PURE__*/_jsx(ConfirmPasswordModal,{isOpen:showConfirm,title:\"Confirm Task Update\",description:\"Enter your password to apply changes to this task.\",onCancel:()=>{setShowConfirm(false);setPendingData(null);setConfirmError('');},onConfirm:confirmEdit,isSubmitting:confirmLoading,errorMessage:confirmError})]});};export default TaskModal;","map":{"version":3,"names":["React","useState","useEffect","useMutation","useQuery","useAuth","tasksAPI","projectsAPI","authAPI","Button","Input","Select","Textarea","X","toast","ConfirmPasswordModal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TaskModal","_ref","_projects$data","_employees$data","task","onClose","onSuccess","user","formData","setFormData","title","description","project","assignee","assignee_ids","priority","status","due_date","multiAssign","setMultiAssign","errors","setErrors","showConfirm","setShowConfirm","confirmError","setConfirmError","confirmLoading","setConfirmLoading","pendingData","setPendingData","data","projects","getProjects","employees","isLoading","employeesLoading","error","employeesError","getEmployees","then","res","enabled","role","console","log","Array","isArray","onError","taskMutation","updateTask","id","createTask","success","_error$response","_error$response$data","message","response","detail","assignees","map","a","Date","toISOString","split","handleChange","e","name","value","target","prev","_objectSpread","validateForm","newErrors","trim","length","Object","keys","handleSubmit","preventDefault","submitData","parseInt","mutate","confirmEdit","password","login","email","onSettled","priorityOptions","label","statusOptions","projectArray","results","projectOptions","employeesArray","assigneeOptions","emp","get_full_name","username","children","className","onClick","onSubmit","type","onChange","required","placeholder","rows","options","checked","employee","includes","filter","first_name","last_name","assigneeId","find","loading","disabled","variant","isOpen","onCancel","onConfirm","isSubmitting","errorMessage"],"sources":["C:/Users/B Chaitanya Chowdary/Desktop/Task/frontend/src/components/Tasks/TaskModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useMutation, useQuery } from 'react-query';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { tasksAPI, projectsAPI, authAPI } from '../../services/api';\r\nimport Button from '../UI/Button';\r\nimport Input from '../UI/Input';\r\nimport Select from '../UI/Select';\r\nimport Textarea from '../UI/Textarea';\r\nimport { X } from 'lucide-react';\r\nimport toast from 'react-hot-toast';\r\nimport ConfirmPasswordModal from '../UI/ConfirmPasswordModal';\r\n\r\nconst TaskModal = ({ task, onClose, onSuccess }) => {\r\n  const { user } = useAuth();\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    project: '',\r\n    assignee: '',\r\n    assignee_ids: [],\r\n    priority: 'medium',\r\n    status: 'todo',\r\n    due_date: '',\r\n  });\r\n  const [multiAssign, setMultiAssign] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [confirmError, setConfirmError] = useState('');\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [pendingData, setPendingData] = useState(null);\r\n\r\n  // Fetch projects and employees\r\n  const { data: projects } = useQuery('projects', projectsAPI.getProjects);\r\n  const { data: employees, isLoading: employeesLoading, error: employeesError } = useQuery(\r\n    'employees',\r\n    () => authAPI.getEmployees().then(res => res.data || res),\r\n    {\r\n      enabled: user?.role === 'scrum_master',\r\n      onSuccess: (data) => {\r\n        console.log('Employees data:', data);\r\n        console.log('Is array:', Array.isArray(data));\r\n      },\r\n      onError: (error) => {\r\n        console.error('Error fetching employees:', error);\r\n      }\r\n    }\r\n  );\r\n\r\n  // Create/Update task mutation\r\n  const taskMutation = useMutation(\r\n    (data) => task ? tasksAPI.updateTask(task.id, data) : tasksAPI.createTask(data),\r\n    {\r\n      onSuccess: () => {\r\n        toast.success(task ? 'Task updated successfully' : 'Task created successfully');\r\n        onSuccess();\r\n      },\r\n      onError: (error) => {\r\n        const message = error.response?.data?.detail || 'Operation failed';\r\n        toast.error(message);\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (task) {\r\n      setFormData({\r\n        title: task.title || '',\r\n        description: task.description || '',\r\n        project: task.project || '',\r\n        assignee: task.assignee || '',\r\n        assignee_ids: task.assignees ? task.assignees.map(a => a.user) : [],\r\n        priority: task.priority || 'medium',\r\n        status: task.status || 'todo',\r\n        due_date: task.due_date ? new Date(task.due_date).toISOString().split('T')[0] : '',\r\n      });\r\n    }\r\n  }, [task]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    // Clear error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: '',\r\n      }));\r\n    }\r\n  };\r\n\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.title.trim()) {\r\n      newErrors.title = 'Title is required';\r\n    }\r\n\r\n    if (!formData.project) {\r\n      newErrors.project = 'Project is required';\r\n    }\r\n\r\n    if (user?.role === 'scrum_master') {\r\n      if (!multiAssign) {\r\n        if (!formData.assignee) newErrors.assignee = 'Select one employee';\r\n      } else {\r\n        if (!Array.isArray(formData.assignee_ids) || formData.assignee_ids.length === 0) {\r\n          newErrors.assignee_ids = 'Select at least one employee';\r\n        }\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) return;\r\n\r\n    const submitData = {\r\n      title: formData.title,\r\n      description: formData.description,\r\n      project: formData.project ? parseInt(formData.project, 10) : null,\r\n      assignee: !multiAssign && formData.assignee ? parseInt(formData.assignee, 10) : null,\r\n      assignee_ids: multiAssign ? formData.assignee_ids : (formData.assignee ? [parseInt(formData.assignee, 10)] : []),\r\n      priority: formData.priority,\r\n      status: formData.status,\r\n      due_date: formData.due_date || null,\r\n    };\r\n\r\n    if (task) {\r\n      setPendingData(submitData);\r\n      setConfirmError('');\r\n      setShowConfirm(true);\r\n      return;\r\n    }\r\n    taskMutation.mutate(submitData);\r\n  };\r\n\r\n  const confirmEdit = async (password) => {\r\n    if (!pendingData) return;\r\n    setConfirmLoading(true);\r\n    setConfirmError('');\r\n    try {\r\n      await authAPI.login(user?.email, password);\r\n      taskMutation.mutate(pendingData, {\r\n        onSettled: () => {\r\n          setConfirmLoading(false);\r\n          setShowConfirm(false);\r\n          setPendingData(null);\r\n        }\r\n      });\r\n    } catch (e) {\r\n      setConfirmLoading(false);\r\n      setConfirmError('Incorrect password. Please try again.');\r\n    }\r\n  };\r\n\r\n  const priorityOptions = [\r\n    { value: 'low', label: 'Low' },\r\n    { value: 'medium', label: 'Medium' },\r\n    { value: 'high', label: 'High' },\r\n    { value: 'critical', label: 'Critical' },\r\n  ];\r\n\r\n  const statusOptions = [\r\n    { value: 'todo', label: 'To Do' },\r\n    { value: 'in_progress', label: 'In Progress' },\r\n    { value: 'done', label: 'Done' },\r\n  ];\r\n\r\n  const projectArray = Array.isArray(projects)\r\n    ? projects\r\n    : (Array.isArray(projects?.data)\r\n        ? projects.data\r\n        : (projects?.data?.results || []));\r\n\r\n  const projectOptions = projectArray.map(project => ({\r\n    value: project.id,\r\n    label: project.name,\r\n  }));\r\n\r\n  const employeesArray = Array.isArray(employees)\r\n    ? employees\r\n    : (Array.isArray(employees?.results)\r\n        ? employees.results\r\n        : (Array.isArray(employees?.data)\r\n            ? employees.data\r\n            : (employees?.data?.results || [])));\r\n\r\n  const assigneeOptions = employeesArray.map(emp => ({\r\n    value: emp.id,\r\n    label: emp.get_full_name || emp.username,\r\n  }));\r\n\r\n  return (\r\n    <>\r\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n      <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" onClick={onClose}></div>\r\n\r\n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                  {task ? 'Edit Task' : 'Create New Task'}\r\n                </h3>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={onClose}\r\n                  className=\"text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  <X className=\"h-6 w-6\" />\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                <Input\r\n                  label=\"Title\"\r\n                  name=\"title\"\r\n                  value={formData.title}\r\n                  onChange={handleChange}\r\n                  error={errors.title}\r\n                  required\r\n                  placeholder=\"Enter task title\"\r\n                />\r\n\r\n                <Textarea\r\n                  label=\"Description\"\r\n                  name=\"description\"\r\n                  value={formData.description}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Enter task description\"\r\n                  rows={3}\r\n                />\r\n\r\n                <Select\r\n                  label=\"Project\"\r\n                  name=\"project\"\r\n                  value={formData.project}\r\n                  onChange={handleChange}\r\n                  options={projectOptions}\r\n                  error={errors.project}\r\n                  required\r\n                  placeholder=\"Select project\"\r\n                />\r\n\r\n                {user?.role === 'scrum_master' && (\r\n                  <div>\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <label className=\"block text-sm font-medium text-gray-700\">\r\n                        Assign to Employees\r\n                      </label>\r\n                      <label className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={multiAssign}\r\n                          onChange={(e) => setMultiAssign(e.target.checked)}\r\n                          className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n                        />\r\n                        Assign to multiple\r\n                      </label>\r\n                    </div>\r\n                    {employeesLoading ? (\r\n                      <div className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\">\r\n                        <p className=\"text-sm text-gray-500\">Loading employees...</p>\r\n                      </div>\r\n                    ) : employeesError ? (\r\n                      <div className=\"w-full px-3 py-2 border border-red-300 rounded-md bg-red-50\">\r\n                        <p className=\"text-sm text-red-500\">Error loading employees</p>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"space-y-3\">\r\n                        {!multiAssign ? (\r\n                          <Select\r\n                            name=\"assignee\"\r\n                            value={formData.assignee}\r\n                            onChange={handleChange}\r\n                            options={assigneeOptions}\r\n                            placeholder=\"Select an employee\"\r\n                            error={errors.assignee}\r\n                          />\r\n                        ) : (\r\n                          <div className=\"max-h-40 overflow-y-auto border border-gray-300 rounded-md p-2\">\r\n                            {Array.isArray(employeesArray) && employeesArray.length > 0 ? (\r\n                              employeesArray.map((employee) => (\r\n                                <label key={employee.id} className=\"flex items-center space-x-3 p-2 hover:bg-gray-50 rounded cursor-pointer\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    checked={formData.assignee_ids.includes(employee.id)}\r\n                                    onChange={(e) => {\r\n                                      if (e.target.checked) {\r\n                                        setFormData(prev => ({\r\n                                          ...prev,\r\n                                          assignee_ids: [...prev.assignee_ids, employee.id]\r\n                                        }));\r\n                                      } else {\r\n                                        setFormData(prev => ({\r\n                                          ...prev,\r\n                                          assignee_ids: prev.assignee_ids.filter(id => id !== employee.id)\r\n                                        }));\r\n                                      }\r\n                                    }}\r\n                                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                                  />\r\n                                  <div className=\"flex-1\">\r\n                                    <p className=\"text-sm font-medium text-gray-900\">\r\n                                      {employee.first_name} {employee.last_name}\r\n                                    </p>\r\n                                    <p className=\"text-xs text-gray-500\">{employee.email}</p>\r\n                                  </div>\r\n                                </label>\r\n                              ))\r\n                            ) : (\r\n                              <p className=\"text-sm text-gray-500 p-2\">No employees available</p>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                        {formData.assignee_ids.length > 0 && (\r\n                          <div className=\"flex flex-wrap gap-2\">\r\n                            {formData.assignee_ids.map((assigneeId) => {\r\n                              const employee = employeesArray.find(emp => emp.id === assigneeId);\r\n                              return employee ? (\r\n                                <span\r\n                                  key={assigneeId}\r\n                                  className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\"\r\n                                >\r\n                                  {employee.first_name} {employee.last_name}\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                      setFormData(prev => ({\r\n                                        ...prev,\r\n                                        assignee_ids: prev.assignee_ids.filter(id => id !== assigneeId)\r\n                                      }));\r\n                                    }}\r\n                                    className=\"ml-1.5 inline-flex items-center justify-center w-4 h-4 rounded-full text-blue-400 hover:bg-blue-200 hover:text-blue-500\"\r\n                                  >\r\n                                    <X className=\"w-3 h-3\" />\r\n                                  </button>\r\n                                </span>\r\n                              ) : null;\r\n                            })}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                    <p className=\"mt-1 text-sm text-gray-500\">\r\n                      Choose a single assignee or enable multi-assign to select multiple employees.\r\n                    </p>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <Select\r\n                    label=\"Priority\"\r\n                    name=\"priority\"\r\n                    value={formData.priority}\r\n                    onChange={handleChange}\r\n                    options={priorityOptions}\r\n                  />\r\n\r\n                  <Select\r\n                    label=\"Status\"\r\n                    name=\"status\"\r\n                    value={formData.status}\r\n                    onChange={handleChange}\r\n                    options={statusOptions}\r\n                  />\r\n                </div>\r\n\r\n                <Input\r\n                  label=\"Due Date\"\r\n                  name=\"due_date\"\r\n                  type=\"date\"\r\n                  value={formData.due_date}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n              <Button\r\n                type=\"submit\"\r\n                loading={taskMutation.isLoading}\r\n                disabled={taskMutation.isLoading}\r\n                className=\"w-full sm:w-auto sm:ml-3\"\r\n              >\r\n                {task ? 'Update Task' : 'Create Task'}\r\n              </Button>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline\"\r\n                onClick={onClose}\r\n                className=\"mt-3 w-full sm:mt-0 sm:w-auto\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <ConfirmPasswordModal\r\n      isOpen={showConfirm}\r\n      title=\"Confirm Task Update\"\r\n      description=\"Enter your password to apply changes to this task.\"\r\n      onCancel={() => {\r\n        setShowConfirm(false);\r\n        setPendingData(null);\r\n        setConfirmError('');\r\n      }}\r\n      onConfirm={confirmEdit}\r\n      isSubmitting={confirmLoading}\r\n      errorMessage={confirmError}\r\n    />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}