{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const useTheme=()=>{const context=useContext(ThemeContext);if(!context){// Return default values if not within ThemeProvider\nreturn{isDarkMode:false,toggleTheme:()=>{}};}return context;};export const ThemeProvider=_ref=>{let{children}=_ref;const[isDarkMode,setIsDarkMode]=useState(()=>{const saved=localStorage.getItem('darkMode');return saved?JSON.parse(saved):false;});useEffect(()=>{localStorage.setItem('darkMode',JSON.stringify(isDarkMode));if(isDarkMode){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}},[isDarkMode]);const toggleTheme=()=>{setIsDarkMode(!isDarkMode);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{isDarkMode,toggleTheme},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","useTheme","context","isDarkMode","toggleTheme","ThemeProvider","_ref","children","setIsDarkMode","saved","localStorage","getItem","JSON","parse","setItem","stringify","document","documentElement","classList","add","remove","Provider","value"],"sources":["C:/Users/B Chaitanya Chowdary/Desktop/Task/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    // Return default values if not within ThemeProvider\r\n    return {\r\n      isDarkMode: false,\r\n      toggleTheme: () => {}\r\n    };\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    const saved = localStorage.getItem('darkMode');\r\n    return saved ? JSON.parse(saved) : false;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\r\n    if (isDarkMode) {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAO,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGP,UAAU,CAACK,YAAY,CAAC,CACxC,GAAI,CAACE,OAAO,CAAE,CACZ;AACA,MAAO,CACLC,UAAU,CAAE,KAAK,CACjBC,WAAW,CAAEA,CAAA,GAAM,CAAC,CACtB,CAAC,CACH,CACA,MAAO,CAAAF,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAG,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACH,UAAU,CAAEK,aAAa,CAAC,CAAGZ,QAAQ,CAAC,IAAM,CACjD,KAAM,CAAAa,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAC9C,MAAO,CAAAF,KAAK,CAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,CAAG,KAAK,CAC1C,CAAC,CAAC,CAEFZ,SAAS,CAAC,IAAM,CACda,YAAY,CAACI,OAAO,CAAC,UAAU,CAAEF,IAAI,CAACG,SAAS,CAACZ,UAAU,CAAC,CAAC,CAC5D,GAAIA,UAAU,CAAE,CACda,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC,CAChD,CAAC,IAAM,CACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC,CACnD,CACF,CAAC,CAAE,CAACjB,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxBI,aAAa,CAAC,CAACL,UAAU,CAAC,CAC5B,CAAC,CAED,mBACEJ,IAAA,CAACC,YAAY,CAACqB,QAAQ,EAACC,KAAK,CAAE,CAAEnB,UAAU,CAAEC,WAAY,CAAE,CAAAG,QAAA,CACvDA,QAAQ,CACY,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}