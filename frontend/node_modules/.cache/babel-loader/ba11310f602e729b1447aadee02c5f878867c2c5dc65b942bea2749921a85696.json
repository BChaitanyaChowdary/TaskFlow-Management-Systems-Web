{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\B Chaitanya Chowdary\\\\Desktop\\\\Task\\\\frontend\\\\src\\\\pages\\\\Kanban\\\\Kanban.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { tasksAPI } from '../../services/api';\nimport Card from '../../components/UI/Card';\nimport Badge from '../../components/UI/Badge';\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\nimport TaskModal from '../../components/Tasks/TaskModal';\nimport { Plus, Calendar, User, AlertCircle, CheckCircle, Clock } from 'lucide-react';\nimport { format } from 'date-fns';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kanban = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const queryClient = useQueryClient();\n  const [showModal, setShowModal] = useState(false);\n  const [editingTask, setEditingTask] = useState(null);\n  const [draggedTask, setDraggedTask] = useState(null);\n  const [dragOverColumn, setDragOverColumn] = useState(null);\n\n  // Fetch kanban tasks\n  const {\n    data: kanbanData,\n    isLoading,\n    error\n  } = useQuery('kanbanTasks', tasksAPI.getKanbanTasks, {\n    // Refresh frequently so Scrum Master sees employees' updates quickly\n    refetchInterval: 5000\n  });\n\n  // Update task status mutation\n  const updateStatusMutation = useMutation(({\n    taskId,\n    status\n  }) => tasksAPI.updateTaskStatus(taskId, status), {\n    // Optimistic update for instant UI feedback\n    onMutate: async ({\n      taskId,\n      status\n    }) => {\n      await queryClient.cancelQueries('kanbanTasks');\n      const previous = queryClient.getQueryData('kanbanTasks');\n      if (previous) {\n        // Handle both direct data and axios response format\n        const data = previous.data || previous;\n        const clone = {\n          data: {\n            todo: [...(data.todo || [])],\n            in_progress: [...(data.in_progress || [])],\n            done: [...(data.done || [])]\n          }\n        };\n        // Remove task from any column\n        let task;\n        for (const col of ['todo', 'in_progress', 'done']) {\n          const idx = clone.data[col].findIndex(t => t.id === taskId);\n          if (idx !== -1) {\n            task = {\n              ...clone.data[col][idx]\n            };\n            clone.data[col].splice(idx, 1);\n            break;\n          }\n        }\n        // Insert into new column\n        if (task) {\n          task.status = status;\n          clone.data[status].unshift(task);\n          queryClient.setQueryData('kanbanTasks', clone);\n        }\n      }\n      return {\n        previous\n      };\n    },\n    onError: (error, _vars, context) => {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      if (context !== null && context !== void 0 && context.previous) {\n        queryClient.setQueryData('kanbanTasks', context.previous);\n      }\n      const serverMsg = (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || (error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error);\n      toast.error(serverMsg || 'Failed to update task status');\n    },\n    onSettled: () => {\n      queryClient.invalidateQueries('kanbanTasks');\n    }\n  });\n  const handleDragStart = (e, task) => {\n    setDraggedTask(task);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n  const handleDragEnd = () => {\n    setDraggedTask(null);\n    setDragOverColumn(null);\n  };\n  const handleDragOver = (e, columnId) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    setDragOverColumn(columnId);\n  };\n  const handleDrop = (e, newStatus) => {\n    e.preventDefault();\n    setDragOverColumn(null);\n    if (!draggedTask || draggedTask.status === newStatus) {\n      setDraggedTask(null);\n      return;\n    }\n\n    // Check permissions\n    if ((user === null || user === void 0 ? void 0 : user.role) === 'employee' && draggedTask.assignee !== user.id) {\n      toast.error('You can only update your assigned tasks');\n      setDraggedTask(null);\n      return;\n    }\n\n    // Show immediate feedback\n    toast.success(`Moving task to ${newStatus.replace('_', ' ')}...`);\n    updateStatusMutation.mutate({\n      taskId: draggedTask.id,\n      status: newStatus\n    });\n    setDraggedTask(null);\n  };\n  const handleEditTask = task => {\n    setEditingTask(task);\n    setShowModal(true);\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'done':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"h-4 w-4 text-green-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 16\n        }, this);\n      case 'in_progress':\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"h-4 w-4 text-yellow-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"h-4 w-4 text-gray-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getPriorityBadge = priority => {\n    const variants = {\n      low: 'gray',\n      medium: 'primary',\n      high: 'warning',\n      critical: 'danger'\n    };\n    return /*#__PURE__*/_jsxDEV(Badge, {\n      variant: variants[priority],\n      size: \"sm\",\n      children: priority.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Normalize axios response: extract .data which contains { todo, in_progress, done }\n  const data = (kanbanData === null || kanbanData === void 0 ? void 0 : kanbanData.data) || {};\n  const columns = [{\n    id: 'todo',\n    title: 'To Do',\n    color: 'bg-gray-100',\n    tasks: (data === null || data === void 0 ? void 0 : data.todo) || []\n  }, {\n    id: 'in_progress',\n    title: 'In Progress',\n    color: 'bg-yellow-100',\n    tasks: (data === null || data === void 0 ? void 0 : data.in_progress) || []\n  }, {\n    id: 'done',\n    title: 'Done',\n    color: 'bg-green-100',\n    tasks: (data === null || data === void 0 ? void 0 : data.done) || []\n  }];\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        size: \"lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: \"Failed to load kanban board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-900\",\n          children: \"Kanban Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Drag and drop tasks to update their status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/tasks\",\n        className: \"btn btn-primary flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          className: \"h-4 w-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), \"Go to Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-6\",\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 rounded-lg ${column.color}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-gray-900\",\n              children: column.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-white bg-opacity-50 px-2 py-1 rounded-full text-sm font-medium\",\n              children: column.tasks.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `min-h-96 space-y-3 transition-colors duration-200 ${dragOverColumn === column.id && draggedTask && draggedTask.status !== column.id ? 'bg-blue-50 border-2 border-blue-300 border-dashed rounded-lg p-2' : ''}`,\n          onDragOver: e => handleDragOver(e, column.id),\n          onDragLeave: () => setDragOverColumn(null),\n          onDrop: e => handleDrop(e, column.id),\n          children: [column.tasks.map(task => /*#__PURE__*/_jsxDEV(Card, {\n            className: `p-4 cursor-move hover:shadow-md transition-all duration-200 ${(draggedTask === null || draggedTask === void 0 ? void 0 : draggedTask.id) === task.id ? 'opacity-50 scale-95' : ''}`,\n            draggable: true,\n            onDragStart: e => handleDragStart(e, task),\n            onDragEnd: handleDragEnd,\n            onClick: () => {\n              if ((user === null || user === void 0 ? void 0 : user.role) === 'scrum_master') {\n                handleEditTask(task);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-2\",\n                  children: [getStatusIcon(task.status), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-gray-900 line-clamp-2\",\n                    children: task.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 23\n                }, this), getPriorityBadge(task.priority)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600 line-clamp-2\",\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-1 text-xs text-gray-500\",\n                  children: [/*#__PURE__*/_jsxDEV(User, {\n                    className: \"h-3 w-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 25\n                  }, this), task.assignee_name || 'Unassigned']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this), task.due_date && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-1 text-xs text-gray-500\",\n                  children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                    className: \"h-3 w-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 27\n                  }, this), format(new Date(task.due_date), 'MMM dd, yyyy'), task.is_overdue && /*#__PURE__*/_jsxDEV(Badge, {\n                    variant: \"danger\",\n                    size: \"sm\",\n                    children: \"Overdue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-500\",\n                  children: [\"Project: \", task.project_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this), task.comments_count > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-blue-600\",\n                children: [task.comments_count, \" comment\", task.comments_count !== 1 ? 's' : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this)), column.tasks.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center h-32 border-2 border-dashed border-gray-300 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 text-sm\",\n              children: \"No tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, column.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(TaskModal, {\n      task: editingTask,\n      onClose: () => {\n        setShowModal(false);\n        setEditingTask(null);\n      },\n      onSuccess: () => {\n        setShowModal(false);\n        setEditingTask(null);\n        queryClient.invalidateQueries('kanbanTasks');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(Kanban, \"VPMC4nYHhwtTQctZzyKgRIHjPw8=\", false, function () {\n  return [useAuth, useQueryClient, useQuery, useMutation];\n});\n_c = Kanban;\nexport default Kanban;\nvar _c;\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"names":["React","useState","useQuery","useMutation","useQueryClient","useAuth","tasksAPI","Card","Badge","LoadingSpinner","TaskModal","Plus","Calendar","User","AlertCircle","CheckCircle","Clock","format","toast","jsxDEV","_jsxDEV","Kanban","_s","user","queryClient","showModal","setShowModal","editingTask","setEditingTask","draggedTask","setDraggedTask","dragOverColumn","setDragOverColumn","data","kanbanData","isLoading","error","getKanbanTasks","refetchInterval","updateStatusMutation","taskId","status","updateTaskStatus","onMutate","cancelQueries","previous","getQueryData","clone","todo","in_progress","done","task","col","idx","findIndex","t","id","splice","unshift","setQueryData","onError","_vars","context","_error$response","_error$response$data","_error$response2","_error$response2$data","serverMsg","response","detail","onSettled","invalidateQueries","handleDragStart","e","dataTransfer","effectAllowed","handleDragEnd","handleDragOver","columnId","preventDefault","dropEffect","handleDrop","newStatus","role","assignee","success","replace","mutate","handleEditTask","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getPriorityBadge","priority","variants","low","medium","high","critical","variant","size","children","toUpperCase","columns","title","color","tasks","href","map","column","length","onDragOver","onDragLeave","onDrop","draggable","onDragStart","onDragEnd","onClick","description","assignee_name","due_date","Date","is_overdue","project_name","comments_count","onClose","onSuccess","_c","$RefreshReg$"],"sources":["C:/Users/B Chaitanya Chowdary/Desktop/Task/frontend/src/pages/Kanban/Kanban.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { tasksAPI } from '../../services/api';\nimport Card from '../../components/UI/Card';\nimport Badge from '../../components/UI/Badge';\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\nimport TaskModal from '../../components/Tasks/TaskModal';\nimport {\n  Plus,\n  Calendar,\n  User,\n  AlertCircle,\n  CheckCircle,\n  Clock,\n} from 'lucide-react';\nimport { format } from 'date-fns';\nimport toast from 'react-hot-toast';\n\nconst Kanban = () => {\n  const { user } = useAuth();\n  const queryClient = useQueryClient();\n  const [showModal, setShowModal] = useState(false);\n  const [editingTask, setEditingTask] = useState(null);\n  const [draggedTask, setDraggedTask] = useState(null);\n  const [dragOverColumn, setDragOverColumn] = useState(null);\n\n  // Fetch kanban tasks\n  const { data: kanbanData, isLoading, error } = useQuery(\n    'kanbanTasks',\n    tasksAPI.getKanbanTasks,\n    {\n      // Refresh frequently so Scrum Master sees employees' updates quickly\n      refetchInterval: 5000,\n    }\n  );\n\n  // Update task status mutation\n  const updateStatusMutation = useMutation(\n    ({ taskId, status }) => tasksAPI.updateTaskStatus(taskId, status),\n    {\n      // Optimistic update for instant UI feedback\n      onMutate: async ({ taskId, status }) => {\n        await queryClient.cancelQueries('kanbanTasks');\n        const previous = queryClient.getQueryData('kanbanTasks');\n        if (previous) {\n          // Handle both direct data and axios response format\n          const data = previous.data || previous;\n          const clone = {\n            data: {\n              todo: [...(data.todo || [])],\n              in_progress: [...(data.in_progress || [])],\n              done: [...(data.done || [])],\n            }\n          };\n          // Remove task from any column\n          let task;\n          for (const col of ['todo', 'in_progress', 'done']) {\n            const idx = clone.data[col].findIndex((t) => t.id === taskId);\n            if (idx !== -1) {\n              task = { ...clone.data[col][idx] };\n              clone.data[col].splice(idx, 1);\n              break;\n            }\n          }\n          // Insert into new column\n          if (task) {\n            task.status = status;\n            clone.data[status].unshift(task);\n            queryClient.setQueryData('kanbanTasks', clone);\n          }\n        }\n        return { previous };\n      },\n      onError: (error, _vars, context) => {\n        if (context?.previous) {\n          queryClient.setQueryData('kanbanTasks', context.previous);\n        }\n        const serverMsg = error?.response?.data?.detail || error?.response?.data?.error;\n        toast.error(serverMsg || 'Failed to update task status');\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('kanbanTasks');\n      },\n    }\n  );\n\n  const handleDragStart = (e, task) => {\n    setDraggedTask(task);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const handleDragEnd = () => {\n    setDraggedTask(null);\n    setDragOverColumn(null);\n  };\n\n  const handleDragOver = (e, columnId) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    setDragOverColumn(columnId);\n  };\n\n  const handleDrop = (e, newStatus) => {\n    e.preventDefault();\n    setDragOverColumn(null);\n    \n    if (!draggedTask || draggedTask.status === newStatus) {\n      setDraggedTask(null);\n      return;\n    }\n\n    // Check permissions\n    if (user?.role === 'employee' && draggedTask.assignee !== user.id) {\n      toast.error('You can only update your assigned tasks');\n      setDraggedTask(null);\n      return;\n    }\n\n    // Show immediate feedback\n    toast.success(`Moving task to ${newStatus.replace('_', ' ')}...`);\n\n    updateStatusMutation.mutate({\n      taskId: draggedTask.id,\n      status: newStatus,\n    });\n\n    setDraggedTask(null);\n  };\n\n  const handleEditTask = (task) => {\n    setEditingTask(task);\n    setShowModal(true);\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'done':\n        return <CheckCircle className=\"h-4 w-4 text-green-600\" />;\n      case 'in_progress':\n        return <Clock className=\"h-4 w-4 text-yellow-600\" />;\n      default:\n        return <AlertCircle className=\"h-4 w-4 text-gray-600\" />;\n    }\n  };\n\n  const getPriorityBadge = (priority) => {\n    const variants = {\n      low: 'gray',\n      medium: 'primary',\n      high: 'warning',\n      critical: 'danger',\n    };\n    return (\n      <Badge variant={variants[priority]} size=\"sm\">\n        {priority.toUpperCase()}\n      </Badge>\n    );\n  };\n\n  // Normalize axios response: extract .data which contains { todo, in_progress, done }\n  const data = kanbanData?.data || {};\n\n  const columns = [\n    {\n      id: 'todo',\n      title: 'To Do',\n      color: 'bg-gray-100',\n      tasks: data?.todo || [],\n    },\n    {\n      id: 'in_progress',\n      title: 'In Progress',\n      color: 'bg-yellow-100',\n      tasks: data?.in_progress || [],\n    },\n    {\n      id: 'done',\n      title: 'Done',\n      color: 'bg-green-100',\n      tasks: data?.done || [],\n    },\n  ];\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-red-500\">Failed to load kanban board</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Kanban Board</h1>\n          <p className=\"text-gray-600\">Drag and drop tasks to update their status</p>\n        </div>\n        {/* Task creation is handled in the separate Tasks page */}\n        <a\n          href=\"/tasks\"\n          className=\"btn btn-primary flex items-center gap-2\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          Go to Tasks\n        </a>\n      </div>\n\n      {/* Kanban Board */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {columns.map((column) => (\n          <div key={column.id} className=\"space-y-4\">\n            {/* Column Header */}\n            <div className={`p-4 rounded-lg ${column.color}`}>\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"font-semibold text-gray-900\">{column.title}</h3>\n                <span className=\"bg-white bg-opacity-50 px-2 py-1 rounded-full text-sm font-medium\">\n                  {column.tasks.length}\n                </span>\n              </div>\n            </div>\n\n            {/* Tasks */}\n            <div\n              className={`min-h-96 space-y-3 transition-colors duration-200 ${\n                dragOverColumn === column.id && draggedTask && draggedTask.status !== column.id\n                  ? 'bg-blue-50 border-2 border-blue-300 border-dashed rounded-lg p-2'\n                  : ''\n              }`}\n              onDragOver={(e) => handleDragOver(e, column.id)}\n              onDragLeave={() => setDragOverColumn(null)}\n              onDrop={(e) => handleDrop(e, column.id)}\n            >\n              {column.tasks.map((task) => (\n                <Card\n                  key={task.id}\n                  className={`p-4 cursor-move hover:shadow-md transition-all duration-200 ${\n                    draggedTask?.id === task.id ? 'opacity-50 scale-95' : ''\n                  }`}\n                  draggable\n                  onDragStart={(e) => handleDragStart(e, task)}\n                  onDragEnd={handleDragEnd}\n                  onClick={() => {\n                    if (user?.role === 'scrum_master') {\n                      handleEditTask(task);\n                    }\n                  }}\n                >\n                  <div className=\"space-y-3\">\n                    {/* Task Header */}\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        {getStatusIcon(task.status)}\n                        <h4 className=\"font-medium text-gray-900 line-clamp-2\">\n                          {task.title}\n                        </h4>\n                      </div>\n                      {getPriorityBadge(task.priority)}\n                    </div>\n\n                    {/* Task Description */}\n                    {task.description && (\n                      <p className=\"text-sm text-gray-600 line-clamp-2\">\n                        {task.description}\n                      </p>\n                    )}\n\n                    {/* Task Meta */}\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center gap-1 text-xs text-gray-500\">\n                        <User className=\"h-3 w-3\" />\n                        {task.assignee_name || 'Unassigned'}\n                      </div>\n                      \n                      {task.due_date && (\n                        <div className=\"flex items-center gap-1 text-xs text-gray-500\">\n                          <Calendar className=\"h-3 w-3\" />\n                          {format(new Date(task.due_date), 'MMM dd, yyyy')}\n                          {task.is_overdue && (\n                            <Badge variant=\"danger\" size=\"sm\">Overdue</Badge>\n                          )}\n                        </div>\n                      )}\n\n                      <div className=\"text-xs text-gray-500\">\n                        Project: {task.project_name}\n                      </div>\n                    </div>\n\n                    {/* Comments Count */}\n                    {task.comments_count > 0 && (\n                      <div className=\"text-xs text-blue-600\">\n                        {task.comments_count} comment{task.comments_count !== 1 ? 's' : ''}\n                      </div>\n                    )}\n                  </div>\n                </Card>\n              ))}\n\n              {/* Empty State */}\n              {column.tasks.length === 0 && (\n                <div className=\"flex items-center justify-center h-32 border-2 border-dashed border-gray-300 rounded-lg\">\n                  <p className=\"text-gray-500 text-sm\">No tasks</p>\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Task Modal */}\n      {showModal && (\n        <TaskModal\n          task={editingTask}\n          onClose={() => {\n            setShowModal(false);\n            setEditingTask(null);\n          }}\n          onSuccess={() => {\n            setShowModal(false);\n            setEditingTask(null);\n            queryClient.invalidateQueries('kanbanTasks');\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Kanban;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}