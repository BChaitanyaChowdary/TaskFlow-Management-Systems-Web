{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\B Chaitanya Chowdary\\\\Desktop\\\\Task\\\\frontend\\\\src\\\\components\\\\Tasks\\\\TaskModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useMutation, useQuery } from 'react-query';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { tasksAPI, projectsAPI, authAPI } from '../../services/api';\nimport Button from '../UI/Button';\nimport Input from '../UI/Input';\nimport Select from '../UI/Select';\nimport Textarea from '../UI/Textarea';\nimport { X } from 'lucide-react';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskModal = ({\n  task,\n  onClose,\n  onSuccess\n}) => {\n  _s();\n  var _projects$data, _employees$data;\n  const {\n    user\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    project: '',\n    assignee: '',\n    assignee_ids: [],\n    priority: 'medium',\n    status: 'todo',\n    due_date: ''\n  });\n  const [multiAssign, setMultiAssign] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  // Fetch projects and employees\n  const {\n    data: projects\n  } = useQuery('projects', projectsAPI.getProjects);\n  const {\n    data: employees,\n    isLoading: employeesLoading,\n    error: employeesError\n  } = useQuery('employees', () => authAPI.getEmployees().then(res => res.data || res), {\n    enabled: (user === null || user === void 0 ? void 0 : user.role) === 'scrum_master',\n    onSuccess: data => {\n      console.log('Employees data:', data);\n      console.log('Is array:', Array.isArray(data));\n    },\n    onError: error => {\n      console.error('Error fetching employees:', error);\n    }\n  });\n\n  // Create/Update task mutation\n  const taskMutation = useMutation(data => task ? tasksAPI.updateTask(task.id, data) : tasksAPI.createTask(data), {\n    onSuccess: () => {\n      toast.success(task ? 'Task updated successfully' : 'Task created successfully');\n      onSuccess();\n    },\n    onError: error => {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Operation failed';\n      toast.error(message);\n    }\n  });\n  useEffect(() => {\n    if (task) {\n      setFormData({\n        title: task.title || '',\n        description: task.description || '',\n        project: task.project || '',\n        assignee: task.assignee || '',\n        assignee_ids: task.assignees ? task.assignees.map(a => a.user) : [],\n        priority: task.priority || 'medium',\n        status: task.status || 'todo',\n        due_date: task.due_date ? new Date(task.due_date).toISOString().split('T')[0] : ''\n      });\n    }\n  }, [task]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.title.trim()) {\n      newErrors.title = 'Title is required';\n    }\n    if (!formData.project) {\n      newErrors.project = 'Project is required';\n    }\n    if ((user === null || user === void 0 ? void 0 : user.role) === 'scrum_master') {\n      if (!multiAssign) {\n        if (!formData.assignee) newErrors.assignee = 'Select one employee';\n      } else {\n        if (!Array.isArray(formData.assignee_ids) || formData.assignee_ids.length === 0) {\n          newErrors.assignee_ids = 'Select at least one employee';\n        }\n      }\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    const submitData = {\n      title: formData.title,\n      description: formData.description,\n      project: formData.project ? parseInt(formData.project, 10) : null,\n      assignee: !multiAssign && formData.assignee ? parseInt(formData.assignee, 10) : null,\n      assignee_ids: multiAssign ? formData.assignee_ids : formData.assignee ? [parseInt(formData.assignee, 10)] : [],\n      priority: formData.priority,\n      status: formData.status,\n      due_date: formData.due_date || null\n    };\n    taskMutation.mutate(submitData);\n  };\n  const priorityOptions = [{\n    value: 'low',\n    label: 'Low'\n  }, {\n    value: 'medium',\n    label: 'Medium'\n  }, {\n    value: 'high',\n    label: 'High'\n  }, {\n    value: 'critical',\n    label: 'Critical'\n  }];\n  const statusOptions = [{\n    value: 'todo',\n    label: 'To Do'\n  }, {\n    value: 'in_progress',\n    label: 'In Progress'\n  }, {\n    value: 'done',\n    label: 'Done'\n  }];\n  const projectArray = Array.isArray(projects) ? projects : Array.isArray(projects === null || projects === void 0 ? void 0 : projects.data) ? projects.data : (projects === null || projects === void 0 ? void 0 : (_projects$data = projects.data) === null || _projects$data === void 0 ? void 0 : _projects$data.results) || [];\n  const projectOptions = projectArray.map(project => ({\n    value: project.id,\n    label: project.name\n  }));\n  const employeesArray = Array.isArray(employees) ? employees : Array.isArray(employees === null || employees === void 0 ? void 0 : employees.results) ? employees.results : Array.isArray(employees === null || employees === void 0 ? void 0 : employees.data) ? employees.data : (employees === null || employees === void 0 ? void 0 : (_employees$data = employees.data) === null || _employees$data === void 0 ? void 0 : _employees$data.results) || [];\n  const assigneeOptions = employeesArray.map(emp => ({\n    value: emp.id,\n    label: emp.get_full_name || emp.username\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50 overflow-y-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold text-gray-900\",\n                children: task ? 'Edit Task' : 'Create New Task'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: onClose,\n                className: \"text-gray-400 hover:text-gray-600\",\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  className: \"h-6 w-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                label: \"Title\",\n                name: \"title\",\n                value: formData.title,\n                onChange: handleChange,\n                error: errors.title,\n                required: true,\n                placeholder: \"Enter task title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n                label: \"Description\",\n                name: \"description\",\n                value: formData.description,\n                onChange: handleChange,\n                placeholder: \"Enter task description\",\n                rows: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                label: \"Project\",\n                name: \"project\",\n                value: formData.project,\n                onChange: handleChange,\n                options: projectOptions,\n                error: errors.project,\n                required: true,\n                placeholder: \"Select project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), (user === null || user === void 0 ? void 0 : user.role) === 'scrum_master' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700\",\n                    children: \"Assign to Employees\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"flex items-center gap-2 text-sm text-gray-600\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: multiAssign,\n                      onChange: e => setMultiAssign(e.target.checked),\n                      className: \"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 25\n                    }, this), \"Assign to multiple\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this), employeesLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-500\",\n                    children: \"Loading employees...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this) : employeesError ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-full px-3 py-2 border border-red-300 rounded-md bg-red-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-red-500\",\n                    children: \"Error loading employees\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-3\",\n                  children: [!multiAssign ? /*#__PURE__*/_jsxDEV(Select, {\n                    name: \"assignee\",\n                    value: formData.assignee,\n                    onChange: handleChange,\n                    options: assigneeOptions,\n                    placeholder: \"Select an employee\",\n                    error: errors.assignee\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"max-h-40 overflow-y-auto border border-gray-300 rounded-md p-2\",\n                    children: Array.isArray(employeesArray) && employeesArray.length > 0 ? employeesArray.map(employee => /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"flex items-center space-x-3 p-2 hover:bg-gray-50 rounded cursor-pointer\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: formData.assignee_ids.includes(employee.id),\n                        onChange: e => {\n                          if (e.target.checked) {\n                            setFormData(prev => ({\n                              ...prev,\n                              assignee_ids: [...prev.assignee_ids, employee.id]\n                            }));\n                          } else {\n                            setFormData(prev => ({\n                              ...prev,\n                              assignee_ids: prev.assignee_ids.filter(id => id !== employee.id)\n                            }));\n                          }\n                        },\n                        className: \"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex-1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-sm font-medium text-gray-900\",\n                          children: [employee.first_name, \" \", employee.last_name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 282,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-xs text-gray-500\",\n                          children: employee.email\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 285,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 281,\n                        columnNumber: 35\n                      }, this)]\n                    }, employee.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 33\n                    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-500 p-2\",\n                      children: \"No employees available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 27\n                  }, this), formData.assignee_ids.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex flex-wrap gap-2\",\n                    children: formData.assignee_ids.map(assigneeId => {\n                      const employee = employees === null || employees === void 0 ? void 0 : employees.find(emp => emp.id === assigneeId);\n                      return employee ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\",\n                        children: [employee.first_name, \" \", employee.last_name, /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          onClick: () => {\n                            setFormData(prev => ({\n                              ...prev,\n                              assignee_ids: prev.assignee_ids.filter(id => id !== assigneeId)\n                            }));\n                          },\n                          className: \"ml-1.5 inline-flex items-center justify-center w-4 h-4 rounded-full text-blue-400 hover:bg-blue-200 hover:text-blue-500\",\n                          children: /*#__PURE__*/_jsxDEV(X, {\n                            className: \"w-3 h-3\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 314,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 304,\n                          columnNumber: 35\n                        }, this)]\n                      }, assigneeId, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 299,\n                        columnNumber: 33\n                      }, this) : null;\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mt-1 text-sm text-gray-500\",\n                  children: \"Choose a single assignee or enable multi-assign to select multiple employees.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-2 gap-4\",\n                children: [/*#__PURE__*/_jsxDEV(Select, {\n                  label: \"Priority\",\n                  name: \"priority\",\n                  value: formData.priority,\n                  onChange: handleChange,\n                  options: priorityOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  label: \"Status\",\n                  name: \"status\",\n                  value: formData.status,\n                  onChange: handleChange,\n                  options: statusOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                label: \"Due Date\",\n                name: \"due_date\",\n                type: \"date\",\n                value: formData.due_date,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              loading: taskMutation.isLoading,\n              disabled: taskMutation.isLoading,\n              className: \"w-full sm:w-auto sm:ml-3\",\n              children: task ? 'Update Task' : 'Create Task'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline\",\n              onClick: onClose,\n              className: \"mt-3 w-full sm:mt-0 sm:w-auto\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskModal, \"9B67pfRQa0k+ZXz0s90kGIMP8u4=\", false, function () {\n  return [useAuth, useQuery, useQuery, useMutation];\n});\n_c = TaskModal;\nexport default TaskModal;\nvar _c;\n$RefreshReg$(_c, \"TaskModal\");","map":{"version":3,"names":["React","useState","useEffect","useMutation","useQuery","useAuth","tasksAPI","projectsAPI","authAPI","Button","Input","Select","Textarea","X","toast","jsxDEV","_jsxDEV","TaskModal","task","onClose","onSuccess","_s","_projects$data","_employees$data","user","formData","setFormData","title","description","project","assignee","assignee_ids","priority","status","due_date","multiAssign","setMultiAssign","errors","setErrors","data","projects","getProjects","employees","isLoading","employeesLoading","error","employeesError","getEmployees","then","res","enabled","role","console","log","Array","isArray","onError","taskMutation","updateTask","id","createTask","success","_error$response","_error$response$data","message","response","detail","assignees","map","a","Date","toISOString","split","handleChange","e","name","value","target","prev","validateForm","newErrors","trim","length","Object","keys","handleSubmit","preventDefault","submitData","parseInt","mutate","priorityOptions","label","statusOptions","projectArray","results","projectOptions","employeesArray","assigneeOptions","emp","get_full_name","username","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","placeholder","rows","options","checked","employee","includes","filter","first_name","last_name","email","assigneeId","find","loading","disabled","variant","_c","$RefreshReg$"],"sources":["C:/Users/B Chaitanya Chowdary/Desktop/Task/frontend/src/components/Tasks/TaskModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useMutation, useQuery } from 'react-query';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { tasksAPI, projectsAPI, authAPI } from '../../services/api';\r\nimport Button from '../UI/Button';\r\nimport Input from '../UI/Input';\r\nimport Select from '../UI/Select';\r\nimport Textarea from '../UI/Textarea';\r\nimport { X } from 'lucide-react';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst TaskModal = ({ task, onClose, onSuccess }) => {\r\n  const { user } = useAuth();\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    project: '',\r\n    assignee: '',\r\n    assignee_ids: [],\r\n    priority: 'medium',\r\n    status: 'todo',\r\n    due_date: '',\r\n  });\r\n  const [multiAssign, setMultiAssign] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // Fetch projects and employees\r\n  const { data: projects } = useQuery('projects', projectsAPI.getProjects);\r\n  const { data: employees, isLoading: employeesLoading, error: employeesError } = useQuery(\r\n    'employees',\r\n    () => authAPI.getEmployees().then(res => res.data || res),\r\n    {\r\n      enabled: user?.role === 'scrum_master',\r\n      onSuccess: (data) => {\r\n        console.log('Employees data:', data);\r\n        console.log('Is array:', Array.isArray(data));\r\n      },\r\n      onError: (error) => {\r\n        console.error('Error fetching employees:', error);\r\n      }\r\n    }\r\n  );\r\n\r\n  // Create/Update task mutation\r\n  const taskMutation = useMutation(\r\n    (data) => task ? tasksAPI.updateTask(task.id, data) : tasksAPI.createTask(data),\r\n    {\r\n      onSuccess: () => {\r\n        toast.success(task ? 'Task updated successfully' : 'Task created successfully');\r\n        onSuccess();\r\n      },\r\n      onError: (error) => {\r\n        const message = error.response?.data?.detail || 'Operation failed';\r\n        toast.error(message);\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (task) {\r\n      setFormData({\r\n        title: task.title || '',\r\n        description: task.description || '',\r\n        project: task.project || '',\r\n        assignee: task.assignee || '',\r\n        assignee_ids: task.assignees ? task.assignees.map(a => a.user) : [],\r\n        priority: task.priority || 'medium',\r\n        status: task.status || 'todo',\r\n        due_date: task.due_date ? new Date(task.due_date).toISOString().split('T')[0] : '',\r\n      });\r\n    }\r\n  }, [task]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    // Clear error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: '',\r\n      }));\r\n    }\r\n  };\r\n\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.title.trim()) {\r\n      newErrors.title = 'Title is required';\r\n    }\r\n\r\n    if (!formData.project) {\r\n      newErrors.project = 'Project is required';\r\n    }\r\n\r\n    if (user?.role === 'scrum_master') {\r\n      if (!multiAssign) {\r\n        if (!formData.assignee) newErrors.assignee = 'Select one employee';\r\n      } else {\r\n        if (!Array.isArray(formData.assignee_ids) || formData.assignee_ids.length === 0) {\r\n          newErrors.assignee_ids = 'Select at least one employee';\r\n        }\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) return;\r\n\r\n    const submitData = {\r\n      title: formData.title,\r\n      description: formData.description,\r\n      project: formData.project ? parseInt(formData.project, 10) : null,\r\n      assignee: !multiAssign && formData.assignee ? parseInt(formData.assignee, 10) : null,\r\n      assignee_ids: multiAssign ? formData.assignee_ids : (formData.assignee ? [parseInt(formData.assignee, 10)] : []),\r\n      priority: formData.priority,\r\n      status: formData.status,\r\n      due_date: formData.due_date || null,\r\n    };\r\n\r\n    taskMutation.mutate(submitData);\r\n  };\r\n\r\n  const priorityOptions = [\r\n    { value: 'low', label: 'Low' },\r\n    { value: 'medium', label: 'Medium' },\r\n    { value: 'high', label: 'High' },\r\n    { value: 'critical', label: 'Critical' },\r\n  ];\r\n\r\n  const statusOptions = [\r\n    { value: 'todo', label: 'To Do' },\r\n    { value: 'in_progress', label: 'In Progress' },\r\n    { value: 'done', label: 'Done' },\r\n  ];\r\n\r\n  const projectArray = Array.isArray(projects)\r\n    ? projects\r\n    : (Array.isArray(projects?.data)\r\n        ? projects.data\r\n        : (projects?.data?.results || []));\r\n\r\n  const projectOptions = projectArray.map(project => ({\r\n    value: project.id,\r\n    label: project.name,\r\n  }));\r\n\r\n  const employeesArray = Array.isArray(employees)\r\n    ? employees\r\n    : (Array.isArray(employees?.results)\r\n        ? employees.results\r\n        : (Array.isArray(employees?.data)\r\n            ? employees.data\r\n            : (employees?.data?.results || [])));\r\n\r\n  const assigneeOptions = employeesArray.map(emp => ({\r\n    value: emp.id,\r\n    label: emp.get_full_name || emp.username,\r\n  }));\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n      <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" onClick={onClose}></div>\r\n\r\n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                  {task ? 'Edit Task' : 'Create New Task'}\r\n                </h3>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={onClose}\r\n                  className=\"text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  <X className=\"h-6 w-6\" />\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                <Input\r\n                  label=\"Title\"\r\n                  name=\"title\"\r\n                  value={formData.title}\r\n                  onChange={handleChange}\r\n                  error={errors.title}\r\n                  required\r\n                  placeholder=\"Enter task title\"\r\n                />\r\n\r\n                <Textarea\r\n                  label=\"Description\"\r\n                  name=\"description\"\r\n                  value={formData.description}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Enter task description\"\r\n                  rows={3}\r\n                />\r\n\r\n                <Select\r\n                  label=\"Project\"\r\n                  name=\"project\"\r\n                  value={formData.project}\r\n                  onChange={handleChange}\r\n                  options={projectOptions}\r\n                  error={errors.project}\r\n                  required\r\n                  placeholder=\"Select project\"\r\n                />\r\n\r\n                {user?.role === 'scrum_master' && (\r\n                  <div>\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <label className=\"block text-sm font-medium text-gray-700\">\r\n                        Assign to Employees\r\n                      </label>\r\n                      <label className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={multiAssign}\r\n                          onChange={(e) => setMultiAssign(e.target.checked)}\r\n                          className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n                        />\r\n                        Assign to multiple\r\n                      </label>\r\n                    </div>\r\n                    {employeesLoading ? (\r\n                      <div className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50\">\r\n                        <p className=\"text-sm text-gray-500\">Loading employees...</p>\r\n                      </div>\r\n                    ) : employeesError ? (\r\n                      <div className=\"w-full px-3 py-2 border border-red-300 rounded-md bg-red-50\">\r\n                        <p className=\"text-sm text-red-500\">Error loading employees</p>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"space-y-3\">\r\n                        {!multiAssign ? (\r\n                          <Select\r\n                            name=\"assignee\"\r\n                            value={formData.assignee}\r\n                            onChange={handleChange}\r\n                            options={assigneeOptions}\r\n                            placeholder=\"Select an employee\"\r\n                            error={errors.assignee}\r\n                          />\r\n                        ) : (\r\n                          <div className=\"max-h-40 overflow-y-auto border border-gray-300 rounded-md p-2\">\r\n                            {Array.isArray(employeesArray) && employeesArray.length > 0 ? (\r\n                              employeesArray.map((employee) => (\r\n                                <label key={employee.id} className=\"flex items-center space-x-3 p-2 hover:bg-gray-50 rounded cursor-pointer\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    checked={formData.assignee_ids.includes(employee.id)}\r\n                                    onChange={(e) => {\r\n                                      if (e.target.checked) {\r\n                                        setFormData(prev => ({\r\n                                          ...prev,\r\n                                          assignee_ids: [...prev.assignee_ids, employee.id]\r\n                                        }));\r\n                                      } else {\r\n                                        setFormData(prev => ({\r\n                                          ...prev,\r\n                                          assignee_ids: prev.assignee_ids.filter(id => id !== employee.id)\r\n                                        }));\r\n                                      }\r\n                                    }}\r\n                                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                                  />\r\n                                  <div className=\"flex-1\">\r\n                                    <p className=\"text-sm font-medium text-gray-900\">\r\n                                      {employee.first_name} {employee.last_name}\r\n                                    </p>\r\n                                    <p className=\"text-xs text-gray-500\">{employee.email}</p>\r\n                                  </div>\r\n                                </label>\r\n                              ))\r\n                            ) : (\r\n                              <p className=\"text-sm text-gray-500 p-2\">No employees available</p>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                        {formData.assignee_ids.length > 0 && (\r\n                          <div className=\"flex flex-wrap gap-2\">\r\n                            {formData.assignee_ids.map((assigneeId) => {\r\n                              const employee = employees?.find(emp => emp.id === assigneeId);\r\n                              return employee ? (\r\n                                <span\r\n                                  key={assigneeId}\r\n                                  className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\"\r\n                                >\r\n                                  {employee.first_name} {employee.last_name}\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                      setFormData(prev => ({\r\n                                        ...prev,\r\n                                        assignee_ids: prev.assignee_ids.filter(id => id !== assigneeId)\r\n                                      }));\r\n                                    }}\r\n                                    className=\"ml-1.5 inline-flex items-center justify-center w-4 h-4 rounded-full text-blue-400 hover:bg-blue-200 hover:text-blue-500\"\r\n                                  >\r\n                                    <X className=\"w-3 h-3\" />\r\n                                  </button>\r\n                                </span>\r\n                              ) : null;\r\n                            })}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                    <p className=\"mt-1 text-sm text-gray-500\">\r\n                      Choose a single assignee or enable multi-assign to select multiple employees.\r\n                    </p>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <Select\r\n                    label=\"Priority\"\r\n                    name=\"priority\"\r\n                    value={formData.priority}\r\n                    onChange={handleChange}\r\n                    options={priorityOptions}\r\n                  />\r\n\r\n                  <Select\r\n                    label=\"Status\"\r\n                    name=\"status\"\r\n                    value={formData.status}\r\n                    onChange={handleChange}\r\n                    options={statusOptions}\r\n                  />\r\n                </div>\r\n\r\n                <Input\r\n                  label=\"Due Date\"\r\n                  name=\"due_date\"\r\n                  type=\"date\"\r\n                  value={formData.due_date}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n              <Button\r\n                type=\"submit\"\r\n                loading={taskMutation.isLoading}\r\n                disabled={taskMutation.isLoading}\r\n                className=\"w-full sm:w-auto sm:ml-3\"\r\n              >\r\n                {task ? 'Update Task' : 'Create Task'}\r\n              </Button>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline\"\r\n                onClick={onClose}\r\n                className=\"mt-3 w-full sm:mt-0 sm:w-auto\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}