{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\B Chaitanya Chowdary\\\\Desktop\\\\Task\\\\frontend\\\\src\\\\pages\\\\Kanban\\\\Kanban.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { tasksAPI } from '../../services/api';\nimport Card from '../../components/UI/Card';\nimport Badge from '../../components/UI/Badge';\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\nimport TaskModal from '../../components/Tasks/TaskModal';\nimport { Plus, Calendar, User, AlertCircle, CheckCircle, Clock } from 'lucide-react';\nimport { format } from 'date-fns';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kanban = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const queryClient = useQueryClient();\n  const [showModal, setShowModal] = useState(false);\n  const [editingTask, setEditingTask] = useState(null);\n  const [draggedTask, setDraggedTask] = useState(null);\n  const [dragOverColumn, setDragOverColumn] = useState(null);\n\n  // Fetch kanban tasks\n  const {\n    data: kanbanData,\n    isLoading,\n    error\n  } = useQuery('kanbanTasks', tasksAPI.getKanbanTasks, {\n    // Refresh frequently so Scrum Master sees employees' updates quickly\n    refetchInterval: 5000\n  });\n\n  // Update task status mutation\n  const updateStatusMutation = useMutation(({\n    taskId,\n    status\n  }) => tasksAPI.updateTaskStatus(taskId, status), {\n    // Optimistic update for instant UI feedback\n    onMutate: async ({\n      taskId,\n      status\n    }) => {\n      await queryClient.cancelQueries('kanbanTasks');\n      const previous = queryClient.getQueryData('kanbanTasks');\n      if (previous) {\n        // Handle both direct data and axios response format\n        const data = previous.data || previous;\n        const clone = {\n          data: {\n            todo: [...(data.todo || [])],\n            in_progress: [...(data.in_progress || [])],\n            done: [...(data.done || [])]\n          }\n        };\n        // Remove task from any column\n        let task;\n        for (const col of ['todo', 'in_progress', 'done']) {\n          const idx = clone.data[col].findIndex(t => t.id === taskId);\n          if (idx !== -1) {\n            task = {\n              ...clone.data[col][idx]\n            };\n            clone.data[col].splice(idx, 1);\n            break;\n          }\n        }\n        // Insert into new column\n        if (task) {\n          task.status = status;\n          clone.data[status].unshift(task);\n          queryClient.setQueryData('kanbanTasks', clone);\n        }\n      }\n      return {\n        previous\n      };\n    },\n    onError: (error, _vars, context) => {\n      var _error$response, _error$response$data;\n      if (context !== null && context !== void 0 && context.previous) {\n        queryClient.setQueryData('kanbanTasks', context.previous);\n      }\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Failed to update task status');\n    },\n    onSettled: () => {\n      queryClient.invalidateQueries('kanbanTasks');\n    }\n  });\n  const handleDragStart = (e, task) => {\n    setDraggedTask(task);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n  const handleDragOver = (e, columnId) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    setDragOverColumn(columnId);\n  };\n  const handleDrop = (e, newStatus) => {\n    e.preventDefault();\n    if (!draggedTask || draggedTask.status === newStatus) {\n      setDraggedTask(null);\n      return;\n    }\n\n    // Check permissions\n    if ((user === null || user === void 0 ? void 0 : user.role) === 'employee' && draggedTask.assignee !== user.id) {\n      toast.error('You can only update your assigned tasks');\n      setDraggedTask(null);\n      return;\n    }\n    updateStatusMutation.mutate({\n      taskId: draggedTask.id,\n      status: newStatus\n    });\n    setDraggedTask(null);\n  };\n  const handleEditTask = task => {\n    setEditingTask(task);\n    setShowModal(true);\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'done':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"h-4 w-4 text-green-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 16\n        }, this);\n      case 'in_progress':\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"h-4 w-4 text-yellow-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"h-4 w-4 text-gray-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getPriorityBadge = priority => {\n    const variants = {\n      low: 'gray',\n      medium: 'primary',\n      high: 'warning',\n      critical: 'danger'\n    };\n    return /*#__PURE__*/_jsxDEV(Badge, {\n      variant: variants[priority],\n      size: \"sm\",\n      children: priority.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Normalize axios response: extract .data which contains { todo, in_progress, done }\n  const data = (kanbanData === null || kanbanData === void 0 ? void 0 : kanbanData.data) || {};\n  const columns = [{\n    id: 'todo',\n    title: 'To Do',\n    color: 'bg-gray-100',\n    tasks: (data === null || data === void 0 ? void 0 : data.todo) || []\n  }, {\n    id: 'in_progress',\n    title: 'In Progress',\n    color: 'bg-yellow-100',\n    tasks: (data === null || data === void 0 ? void 0 : data.in_progress) || []\n  }, {\n    id: 'done',\n    title: 'Done',\n    color: 'bg-green-100',\n    tasks: (data === null || data === void 0 ? void 0 : data.done) || []\n  }];\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        size: \"lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: \"Failed to load kanban board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-900\",\n          children: \"Kanban Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Drag and drop tasks to update their status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/tasks\",\n        className: \"btn btn-primary flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          className: \"h-4 w-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), \"Go to Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-6\",\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 rounded-lg ${column.color}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-gray-900\",\n              children: column.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-white bg-opacity-50 px-2 py-1 rounded-full text-sm font-medium\",\n              children: column.tasks.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"min-h-96 space-y-3\",\n          onDragOver: handleDragOver,\n          onDrop: e => handleDrop(e, column.id),\n          children: [column.tasks.map(task => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"p-4 cursor-move hover:shadow-md transition-shadow\",\n            draggable: true,\n            onDragStart: e => handleDragStart(e, task),\n            onClick: () => {\n              if ((user === null || user === void 0 ? void 0 : user.role) === 'scrum_master') {\n                handleEditTask(task);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-2\",\n                  children: [getStatusIcon(task.status), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-gray-900 line-clamp-2\",\n                    children: task.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this), getPriorityBadge(task.priority)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600 line-clamp-2\",\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-1 text-xs text-gray-500\",\n                  children: [/*#__PURE__*/_jsxDEV(User, {\n                    className: \"h-3 w-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 25\n                  }, this), task.assignee_name || 'Unassigned']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 23\n                }, this), task.due_date && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-1 text-xs text-gray-500\",\n                  children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                    className: \"h-3 w-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 27\n                  }, this), format(new Date(task.due_date), 'MMM dd, yyyy'), task.is_overdue && /*#__PURE__*/_jsxDEV(Badge, {\n                    variant: \"danger\",\n                    size: \"sm\",\n                    children: \"Overdue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-500\",\n                  children: [\"Project: \", task.project_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this), task.comments_count > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-blue-600\",\n                children: [task.comments_count, \" comment\", task.comments_count !== 1 ? 's' : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)), column.tasks.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center h-32 border-2 border-dashed border-gray-300 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 text-sm\",\n              children: \"No tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, column.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(TaskModal, {\n      task: editingTask,\n      onClose: () => {\n        setShowModal(false);\n        setEditingTask(null);\n      },\n      onSuccess: () => {\n        setShowModal(false);\n        setEditingTask(null);\n        queryClient.invalidateQueries('kanbanTasks');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(Kanban, \"VPMC4nYHhwtTQctZzyKgRIHjPw8=\", false, function () {\n  return [useAuth, useQueryClient, useQuery, useMutation];\n});\n_c = Kanban;\nexport default Kanban;\nvar _c;\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"names":["React","useState","useQuery","useMutation","useQueryClient","useAuth","tasksAPI","Card","Badge","LoadingSpinner","TaskModal","Plus","Calendar","User","AlertCircle","CheckCircle","Clock","format","toast","jsxDEV","_jsxDEV","Kanban","_s","user","queryClient","showModal","setShowModal","editingTask","setEditingTask","draggedTask","setDraggedTask","dragOverColumn","setDragOverColumn","data","kanbanData","isLoading","error","getKanbanTasks","refetchInterval","updateStatusMutation","taskId","status","updateTaskStatus","onMutate","cancelQueries","previous","getQueryData","clone","todo","in_progress","done","task","col","idx","findIndex","t","id","splice","unshift","setQueryData","onError","_vars","context","_error$response","_error$response$data","response","detail","onSettled","invalidateQueries","handleDragStart","e","dataTransfer","effectAllowed","handleDragOver","columnId","preventDefault","dropEffect","handleDrop","newStatus","role","assignee","mutate","handleEditTask","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getPriorityBadge","priority","variants","low","medium","high","critical","variant","size","children","toUpperCase","columns","title","color","tasks","href","map","column","length","onDragOver","onDrop","draggable","onDragStart","onClick","description","assignee_name","due_date","Date","is_overdue","project_name","comments_count","onClose","onSuccess","_c","$RefreshReg$"],"sources":["C:/Users/B Chaitanya Chowdary/Desktop/Task/frontend/src/pages/Kanban/Kanban.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { tasksAPI } from '../../services/api';\r\nimport Card from '../../components/UI/Card';\r\nimport Badge from '../../components/UI/Badge';\r\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\r\nimport TaskModal from '../../components/Tasks/TaskModal';\r\nimport {\r\n  Plus,\r\n  Calendar,\r\n  User,\r\n  AlertCircle,\r\n  CheckCircle,\r\n  Clock,\r\n} from 'lucide-react';\r\nimport { format } from 'date-fns';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst Kanban = () => {\r\n  const { user } = useAuth();\r\n  const queryClient = useQueryClient();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editingTask, setEditingTask] = useState(null);\r\n  const [draggedTask, setDraggedTask] = useState(null);\r\n  const [dragOverColumn, setDragOverColumn] = useState(null);\r\n\r\n  // Fetch kanban tasks\r\n  const { data: kanbanData, isLoading, error } = useQuery(\r\n    'kanbanTasks',\r\n    tasksAPI.getKanbanTasks,\r\n    {\r\n      // Refresh frequently so Scrum Master sees employees' updates quickly\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n\r\n  // Update task status mutation\r\n  const updateStatusMutation = useMutation(\r\n    ({ taskId, status }) => tasksAPI.updateTaskStatus(taskId, status),\r\n    {\r\n      // Optimistic update for instant UI feedback\r\n      onMutate: async ({ taskId, status }) => {\r\n        await queryClient.cancelQueries('kanbanTasks');\r\n        const previous = queryClient.getQueryData('kanbanTasks');\r\n        if (previous) {\r\n          // Handle both direct data and axios response format\r\n          const data = previous.data || previous;\r\n          const clone = {\r\n            data: {\r\n              todo: [...(data.todo || [])],\r\n              in_progress: [...(data.in_progress || [])],\r\n              done: [...(data.done || [])],\r\n            }\r\n          };\r\n          // Remove task from any column\r\n          let task;\r\n          for (const col of ['todo', 'in_progress', 'done']) {\r\n            const idx = clone.data[col].findIndex((t) => t.id === taskId);\r\n            if (idx !== -1) {\r\n              task = { ...clone.data[col][idx] };\r\n              clone.data[col].splice(idx, 1);\r\n              break;\r\n            }\r\n          }\r\n          // Insert into new column\r\n          if (task) {\r\n            task.status = status;\r\n            clone.data[status].unshift(task);\r\n            queryClient.setQueryData('kanbanTasks', clone);\r\n          }\r\n        }\r\n        return { previous };\r\n      },\r\n      onError: (error, _vars, context) => {\r\n        if (context?.previous) {\r\n          queryClient.setQueryData('kanbanTasks', context.previous);\r\n        }\r\n        toast.error(error.response?.data?.detail || 'Failed to update task status');\r\n      },\r\n      onSettled: () => {\r\n        queryClient.invalidateQueries('kanbanTasks');\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleDragStart = (e, task) => {\r\n    setDraggedTask(task);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n  };\r\n\r\n  const handleDragOver = (e, columnId) => {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'move';\r\n    setDragOverColumn(columnId);\r\n  };\r\n\r\n  const handleDrop = (e, newStatus) => {\r\n    e.preventDefault();\r\n    \r\n    if (!draggedTask || draggedTask.status === newStatus) {\r\n      setDraggedTask(null);\r\n      return;\r\n    }\r\n\r\n    // Check permissions\r\n    if (user?.role === 'employee' && draggedTask.assignee !== user.id) {\r\n      toast.error('You can only update your assigned tasks');\r\n      setDraggedTask(null);\r\n      return;\r\n    }\r\n\r\n    updateStatusMutation.mutate({\r\n      taskId: draggedTask.id,\r\n      status: newStatus,\r\n    });\r\n\r\n    setDraggedTask(null);\r\n  };\r\n\r\n  const handleEditTask = (task) => {\r\n    setEditingTask(task);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'done':\r\n        return <CheckCircle className=\"h-4 w-4 text-green-600\" />;\r\n      case 'in_progress':\r\n        return <Clock className=\"h-4 w-4 text-yellow-600\" />;\r\n      default:\r\n        return <AlertCircle className=\"h-4 w-4 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  const getPriorityBadge = (priority) => {\r\n    const variants = {\r\n      low: 'gray',\r\n      medium: 'primary',\r\n      high: 'warning',\r\n      critical: 'danger',\r\n    };\r\n    return (\r\n      <Badge variant={variants[priority]} size=\"sm\">\r\n        {priority.toUpperCase()}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  // Normalize axios response: extract .data which contains { todo, in_progress, done }\r\n  const data = kanbanData?.data || {};\r\n\r\n  const columns = [\r\n    {\r\n      id: 'todo',\r\n      title: 'To Do',\r\n      color: 'bg-gray-100',\r\n      tasks: data?.todo || [],\r\n    },\r\n    {\r\n      id: 'in_progress',\r\n      title: 'In Progress',\r\n      color: 'bg-yellow-100',\r\n      tasks: data?.in_progress || [],\r\n    },\r\n    {\r\n      id: 'done',\r\n      title: 'Done',\r\n      color: 'bg-green-100',\r\n      tasks: data?.done || [],\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <LoadingSpinner size=\"lg\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-center py-8\">\r\n        <p className=\"text-red-500\">Failed to load kanban board</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Kanban Board</h1>\r\n          <p className=\"text-gray-600\">Drag and drop tasks to update their status</p>\r\n        </div>\r\n        {/* Task creation is handled in the separate Tasks page */}\r\n        <a\r\n          href=\"/tasks\"\r\n          className=\"btn btn-primary flex items-center gap-2\"\r\n        >\r\n          <Plus className=\"h-4 w-4\" />\r\n          Go to Tasks\r\n        </a>\r\n      </div>\r\n\r\n      {/* Kanban Board */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {columns.map((column) => (\r\n          <div key={column.id} className=\"space-y-4\">\r\n            {/* Column Header */}\r\n            <div className={`p-4 rounded-lg ${column.color}`}>\r\n              <div className=\"flex items-center justify-between\">\r\n                <h3 className=\"font-semibold text-gray-900\">{column.title}</h3>\r\n                <span className=\"bg-white bg-opacity-50 px-2 py-1 rounded-full text-sm font-medium\">\r\n                  {column.tasks.length}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Tasks */}\r\n            <div\r\n              className=\"min-h-96 space-y-3\"\r\n              onDragOver={handleDragOver}\r\n              onDrop={(e) => handleDrop(e, column.id)}\r\n            >\r\n              {column.tasks.map((task) => (\r\n                <Card\r\n                  key={task.id}\r\n                  className=\"p-4 cursor-move hover:shadow-md transition-shadow\"\r\n                  draggable\r\n                  onDragStart={(e) => handleDragStart(e, task)}\r\n                  onClick={() => {\r\n                    if (user?.role === 'scrum_master') {\r\n                      handleEditTask(task);\r\n                    }\r\n                  }}\r\n                >\r\n                  <div className=\"space-y-3\">\r\n                    {/* Task Header */}\r\n                    <div className=\"flex items-start justify-between\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        {getStatusIcon(task.status)}\r\n                        <h4 className=\"font-medium text-gray-900 line-clamp-2\">\r\n                          {task.title}\r\n                        </h4>\r\n                      </div>\r\n                      {getPriorityBadge(task.priority)}\r\n                    </div>\r\n\r\n                    {/* Task Description */}\r\n                    {task.description && (\r\n                      <p className=\"text-sm text-gray-600 line-clamp-2\">\r\n                        {task.description}\r\n                      </p>\r\n                    )}\r\n\r\n                    {/* Task Meta */}\r\n                    <div className=\"space-y-2\">\r\n                      <div className=\"flex items-center gap-1 text-xs text-gray-500\">\r\n                        <User className=\"h-3 w-3\" />\r\n                        {task.assignee_name || 'Unassigned'}\r\n                      </div>\r\n                      \r\n                      {task.due_date && (\r\n                        <div className=\"flex items-center gap-1 text-xs text-gray-500\">\r\n                          <Calendar className=\"h-3 w-3\" />\r\n                          {format(new Date(task.due_date), 'MMM dd, yyyy')}\r\n                          {task.is_overdue && (\r\n                            <Badge variant=\"danger\" size=\"sm\">Overdue</Badge>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"text-xs text-gray-500\">\r\n                        Project: {task.project_name}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Comments Count */}\r\n                    {task.comments_count > 0 && (\r\n                      <div className=\"text-xs text-blue-600\">\r\n                        {task.comments_count} comment{task.comments_count !== 1 ? 's' : ''}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Card>\r\n              ))}\r\n\r\n              {/* Empty State */}\r\n              {column.tasks.length === 0 && (\r\n                <div className=\"flex items-center justify-center h-32 border-2 border-dashed border-gray-300 rounded-lg\">\r\n                  <p className=\"text-gray-500 text-sm\">No tasks</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Task Modal */}\r\n      {showModal && (\r\n        <TaskModal\r\n          task={editingTask}\r\n          onClose={() => {\r\n            setShowModal(false);\r\n            setEditingTask(null);\r\n          }}\r\n          onSuccess={() => {\r\n            setShowModal(false);\r\n            setEditingTask(null);\r\n            queryClient.invalidateQueries('kanbanTasks');\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Kanban;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}